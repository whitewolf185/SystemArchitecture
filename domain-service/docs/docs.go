// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/domain/CreateCompanion": {
            "post": {
                "description": "создание попутчика. У пользователя не получится создать несколько сущностей попутчиков",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domain_service"
                ],
                "operationId": "domain_service_create_companion",
                "parameters": [
                    {
                        "description": "Параметры, по которым создаем информацию",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_whitewolf185_SystemArchitecture_domain-service_api_domain.CreateCompanionRequestPayloadSwag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_whitewolf185_SystemArchitecture_domain-service_api_domain.Companion"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/github_com_whitewolf185_SystemArchitecture_domain-service_pkg_custom_errors.ErrCodes"
                        }
                    }
                }
            }
        },
        "/domain/CreateRoute": {
            "post": {
                "description": "создание маршрута. Водителю не получится создать несколько маршрутов. Сущность маршрутов будет одна, но в нее можно будет поместить несколько пунктов назначения.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domain_service"
                ],
                "operationId": "domain_service_create_route",
                "parameters": [
                    {
                        "description": "Параметры, по которым создаем информацию",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_whitewolf185_SystemArchitecture_domain-service_api_domain.CreateRouteRequestPayloadSwag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_whitewolf185_SystemArchitecture_domain-service_api_domain.Route"
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/github_com_whitewolf185_SystemArchitecture_domain-service_pkg_custom_errors.ErrCodes"
                        }
                    }
                }
            }
        },
        "/domain/DeleteCompanion": {
            "delete": {
                "description": "Удаление сущности попутчика у пользователя.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domain_service"
                ],
                "operationId": "domain_service_delete_companion",
                "parameters": [
                    {
                        "type": "string",
                        "name": "client_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/github_com_whitewolf185_SystemArchitecture_domain-service_pkg_custom_errors.ErrCodes"
                        }
                    }
                }
            }
        },
        "/domain/DeleteRoute": {
            "delete": {
                "description": "Удаление сущности маршрута у пользователя.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domain_service"
                ],
                "operationId": "domain_service_delete_route",
                "parameters": [
                    {
                        "type": "string",
                        "name": "client_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/github_com_whitewolf185_SystemArchitecture_domain-service_pkg_custom_errors.ErrCodes"
                        }
                    }
                }
            }
        },
        "/domain/GetCompanionInfo": {
            "get": {
                "description": "получение попутчика по фильтрам.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domain_service"
                ],
                "operationId": "domain_service_get_companion_info",
                "parameters": [
                    {
                        "type": "string",
                        "name": "destination",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_whitewolf185_SystemArchitecture_domain-service_api_domain.Companion"
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/github_com_whitewolf185_SystemArchitecture_domain-service_pkg_custom_errors.ErrCodes"
                        }
                    }
                }
            }
        },
        "/domain/GetRouteInfo": {
            "get": {
                "description": "получение маршрута по фильрам.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domain_service"
                ],
                "operationId": "domain_service_get_route_info",
                "parameters": [
                    {
                        "type": "string",
                        "name": "one_of_path",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_whitewolf185_SystemArchitecture_domain-service_api_domain.Route"
                            }
                        }
                    },
                    "default": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/github_com_whitewolf185_SystemArchitecture_domain-service_pkg_custom_errors.ErrCodes"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_whitewolf185_SystemArchitecture_domain-service_api_domain.Companion": {
            "type": "object",
            "properties": {
                "client_id": {
                    "type": "string"
                },
                "destination": {
                    "type": "string"
                }
            }
        },
        "github_com_whitewolf185_SystemArchitecture_domain-service_api_domain.CreateCompanionRequestPayloadSwag": {
            "type": "object",
            "properties": {
                "destination": {
                    "type": "string"
                }
            }
        },
        "github_com_whitewolf185_SystemArchitecture_domain-service_api_domain.CreateRouteRequestPayloadSwag": {
            "type": "object",
            "properties": {
                "path": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "github_com_whitewolf185_SystemArchitecture_domain-service_api_domain.Route": {
            "type": "object",
            "properties": {
                "client_id": {
                    "type": "string"
                },
                "path": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "github_com_whitewolf185_SystemArchitecture_domain-service_pkg_custom_errors.ErrCodes": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "err": {}
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "@0.9",
	Host:             "",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Client service",
	Description:      "swagger для api к клиентскому сервису",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
